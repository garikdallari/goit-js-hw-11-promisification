{"version":3,"sources":["js/task-01.js","js/task-02.js","js/task-03.js","js/title.js","index.js"],"names":["delay","ms","Promise","resolve","setTimeout","logger","time","console","log","then","users","name","active","toggleUserState","allUsers","userName","map","user","updatedUsers","table","randomIntegerFromInterval","min","max","Math","floor","random","makeTransaction","transaction","reject","id","logSuccess","logError","warn","amount","catch","root","document","documentElement","querySelector","addEventListener","evt","x","offsetX","y","offsetY","style","setProperty"],"mappings":";;;AAAA,MAAMA,EAAQC,GACH,IAAIC,QAAQC,IACfC,WAAW,KACVD,EAAQF,IACNA,KAMLI,EAASC,GAAQC,QAAQC,sBAAsBF,OAGrDN,EAAM,KAAMS,KAAKJ,GACjBL,EAAM,KAAMS,KAAKJ,GACjBL,EAAM,MAAMS,KAAKJ;;ACfjB,MAAMK,EAAQ,CACZ,CAAEC,KAAM,QAASC,QAAQ,GACzB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,MAAOC,QAAQ,IAGnBC,EAAkB,CAACC,EAAUC,IACxB,IAAIb,QAAQC,IAIfA,EAHqBW,EAASE,IAAIC,GAC9BA,EAAKN,OAASI,EAAW,IAAKE,EAAML,QAASK,EAAKL,QAAWK,MAQnEZ,EAASa,GAAgBX,QAAQY,MAAMD,GAE7CL,EAAgBH,EAAO,SAASD,KAAKJ,GACrCQ,EAAgBH,EAAO,OAAOD,KAAKJ;;ACrBnC,MAAMe,EAA4B,CAACC,EAAKC,IAC/BC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,GAGhDK,EAAkBC,IACd3B,MAAAA,EAAQoB,EAA0B,IAAK,KAEtC,OAAA,IAAIlB,QAAQ,CAACC,EAASyB,KAEzBxB,WAAW,KACYmB,KAAKE,SAAW,IAG/BtB,EAAQ,CAAE0B,GAAIF,EAAYE,GAAIvB,KAAMN,IAExC4B,EAAOD,EAAYE,KAEnB7B,MAMN8B,EAAa,EAAED,GAAAA,EAAIvB,KAAAA,MACvBC,QAAQC,mBAAmBqB,kBAAmBvB,QAG1CyB,EAAWF,IACftB,QAAQyB,qCAAqCH,+BAI/CH,EAAgB,CAAEG,GAAI,GAAII,OAAQ,MAC/BxB,KAAKqB,GACLI,MAAMH,GAETL,EAAgB,CAAEG,GAAI,GAAII,OAAQ,MAC/BxB,KAAKqB,GACLI,MAAMH,GAETL,EAAgB,CAAEG,GAAI,GAAII,OAAQ,KAC/BxB,KAAKqB,GACLI,MAAMH,GAETL,EAAgB,CAAEG,GAAI,GAAII,OAAQ,MAC/BxB,KAAKqB,GACLI,MAAMH;;AC9CT,MAAMI,EAAOC,SAASC,gBAEtBD,SAASE,cAAc,MAAMC,iBAAiB,YAAaC,IACnDC,IAAAA,EAAID,EAAIE,QACRC,EAAIH,EAAII,QAEZT,EAAKU,MAAMC,YAAY,eAAgBL,OACvCN,EAAKU,MAAMC,YAAY,eAAgBH;;ACH3C,aAJA,QAAA,oBACA,QAAA,gBACA,QAAA,gBACA,QAAA,gBACA,QAAA","file":"src.22a4bce2.js","sourceRoot":"../src","sourcesContent":["const delay = ms => {\n    return new Promise(resolve => {\n        setTimeout(() => {\n         resolve(ms)\n        }, ms)\n      \n    })\n    \n};\n\nconst logger = time => console.log(`Resolved after ${time}ms`);\n\n// Вызовы функции для проверки\ndelay(2000).then(logger); // Resolved after 2000ms\ndelay(1000).then(logger); // Resolved after 1000ms\ndelay(1500).then(logger); // Resolved after 1500ms","const users = [\n  { name: 'Mango', active: true },\n  { name: 'Poly', active: false },\n  { name: 'Ajax', active: true },\n  { name: 'Lux', active: false },\n];\n\nconst toggleUserState = (allUsers, userName) => {\n    return new Promise(resolve => {\n        const updatedUsers = allUsers.map(user =>\n            user.name === userName ? { ...user, active: !user.active } : user,\n        );\n        resolve(updatedUsers)\n})\n\n\n};\n\nconst logger = updatedUsers => console.table(updatedUsers);\n\ntoggleUserState(users, 'Mango').then(logger);\ntoggleUserState(users, 'Lux').then(logger);","const randomIntegerFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst makeTransaction = transaction => {\n    const delay = randomIntegerFromInterval(200, 500);\n    \n    return new Promise((resolve, reject) => {\n        \n        setTimeout(() => {\n            const canProcess = Math.random() > 0.3;\n\n            if (canProcess) {\n                resolve({ id: transaction.id, time: delay });\n            }\n            reject(transaction.id);\n        },\n            delay);\n\n    })\n};\n\n \nconst logSuccess = ({id, time}) => {\n  console.log(`Transaction ${id} processed in ${time}ms`);\n};\n\nconst logError = id => {\n  console.warn(`Error processing transaction ${id}. Please try again later.`);\n};\n\n\nmakeTransaction({ id: 70, amount: 150 })\n  .then(logSuccess)\n  .catch(logError);\n\nmakeTransaction({ id: 71, amount: 230 })\n  .then(logSuccess)\n  .catch(logError);\n\nmakeTransaction({ id: 72, amount: 75 })\n  .then(logSuccess)\n  .catch(logError);\n\nmakeTransaction({ id: 73, amount: 100 })\n  .then(logSuccess)\n  .catch(logError);","const root = document.documentElement;\n \ndocument.querySelector('h1').addEventListener('mousemove', evt => {\n    let x = evt.offsetX;\n    let y = evt.offsetY;\n \n    root.style.setProperty('--mouse-x', `${x}px`);\n    root.style.setProperty('--mouse-y', `${y}px`);\n});","import './sass/main.scss';\nimport './js/task-01';\nimport './js/task-02';\nimport './js/task-03';\nimport './js/title';\n\n"]}